{"version":3,"sources":["styles.js","views/Nexus.js","utils.js","views/Compare.js","views/Compile.js","views/PlexusForecast.js","views/JabilForecast.js","views/Rescheduler.js","views/QuotationCompare.js","views/QuotationCompile.js","routes.js","components/Sidebar.js","views/PlexusEmail.js","App.js","serviceWorker.js","index.js","assets/Format.png"],"names":["useStyles","makeStyles","grow","flexGrow","linkContainer","display","link","margin","padding","backgroundColor","color","textDecoration","borderRadius","transition","textTransform","fontSize","fontWeight","root","marginTop","justifyContent","alignItems","flexDirection","height","label","paddingTop","paddingBottom","width","textAlign","inputWrapper","input","download","border","cursor","fileUploadContainer","fileUploadWrapper","flex","fileUpload","inputContainer","Nexus","classes","useState","rowInfo","headers","setHeaders","mpn","parseDate","undefined","serial","utc_days","Math","floor","date_info","Date","getFullYear","getDate","getMonth","excelDateToJSDate","da","split","onFileChange","e","fileNo","preventDefault","f","target","files","reader","FileReader","onload","data","renderedData","XLSX","type","dataParse","sheet_to_json","Sheets","SheetNames","header","push","i","length","readRaw","result","moq","lt","readMpns","readAsBinaryString","className","style","marginBottom","Input","onChange","event","onClick","wbData","MPN","rowData","forEach","val","idx","row","Object","keys","ws","json_to_sheet","encode_range","s","r","c","er","balanceQty","balanceQtyCommit","commitEta","weekCounter","balanceQtyCellRef","encode_cell","balanceQtyCommitCellRef","moqCellRef","ltCellRef","commitEtaCellRef","weekCounterCellRef","v","wb","excelBuffer","bookType","dd","Blob","FileSaver","downloadFile","Compare","arr","stockCode","parseStockList","cpoDate","price","parseCustomerPriceList","receiveDate","parseSupplierPriceList","workbookRows","supplier_price","customer_price","Compile","fileA","setFileA","fileB","setFileB","q","setQs","setTitleColumn","isFirstFile","key","parseInt","fileDict","partName","priceQuantity","j","quantity","value","excelReader","disabled","map","paddingRight","mult","tmp","JSON","parse","stringify","toString","parseFloat","updateMultiplier","opacity","fileAKeys","fileBKeys","combined","concat","uniqueItems","Set","quantities","individualItemPrice","A","B","myHeader","pl","priceList","quantityArr","priceArr","values","isNaN","alt","src","require","PlexusForecast","oldForecast","setOldForecast","newForecast","setNewForecast","num","parts","partNumber","facilityNumber","intersection","inOld","inNew","part","a","b","filter","x","includes","inA","inB","calculateDifference","JabilForecast","cArr","buyerPartCode","Rescheduler","console","log","store","isEmptyOrUndefined","compare","del_date","utc_value","cellDates","callNF","cellText","line","sys_po_cpn","stock_code","sys_del_qty","sys_del_date","sys_stock","sys_remarks","del_qty","stock","remarks","cus_cpn","cus_po_cpn","cus_po_line","cus_qty","cus_date","cus_action","compile","workbook","Excel","Workbook","worksheet","addWorksheet","borderStyle","top","left","bottom","right","getCell","fill","pattern","fgColor","argb","cell2","mergeCells","alignment","vertical","horizontal","addRow","fillStyleLB","fillStyleG","entries","po","cpn","system","sort","customer","totalRows","max","d","Array","xlsx","writeBuffer","buf","saveAs","QuotationCompare","loading","setLoading","newF","setNew","old","setOld","postRequest","alert","formData","FormData","append","axios","post","responseType","then","res","url","window","URL","createObjectURL","document","createElement","href","setAttribute","body","appendChild","click","catch","err","uploadOld","uploadNew","Backdrop","sx","zIndex","theme","drawer","open","position","CircularProgress","QuotationCompile","inputFile","setInputFile","setPriceList","uploadInput","uploadPricelist","routes","path","name","icon","size","component","toolbar","mixins","borderRightWidth","listBody","text","marginLeft","listItem","Sidebar","props","plexus","setPlexus","jabil","setJabil","ecomm","setEcomm","admin","setAdmin","quotation","setQuotation","List","ListItem","ListItemText","primary","Collapse","in","timeout","unmountOnExit","disablePadding","Link","to","Typography","PlexusEmail","info","setInfo","ccEmail","setCCEmail","capitalizeString","words","separateWord","toLowerCase","charAt","toUpperCase","substring","join","isEmptyOrNull","isArrayInputEmptyOrNull","dict","flag","brand","email","trim","sendEmail","cpnList","templateParams","to_email","cpn_list","to_name","table","emailjs","send","response","status","error","variant","TextField","rows","rowsMax","appBar","flexShrink","drawerPaper","content","palette","background","default","spacing","App","CssBaseline","aria-label","Drawer","paper","render","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.cf894d14.chunk.js","sourcesContent":["import { makeStyles, colors } from '@material-ui/core'\n\nexport const useStyles = makeStyles({\n    grow: {\n        flexGrow: 1,\n    },\n    linkContainer: {\n        display: 'flex'\n    },\n    link: {\n        margin: '5px',\n        padding: '10px 20px 10px 20px',\n        backgroundColor: '#f8f8f8',\n        color: '#434343',\n        textDecoration: 'none',\n        borderRadius: '5px',\n        transition: '0.5s',\n        textTransform: 'uppercase',\n        fontSize: '1em',\n        fontWeight: 'bold',\n\n        '&:hover': {\n            backgroundColor: '#d5d5d5',\n            transition: '0.5s',\n        },\n    },\n\n    root: {\n        marginTop: '50px',\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n    },\n    label: {\n        fontWeight: 'bold',\n        fontSize: '20px',\n        paddingTop: '5px',\n        paddingBottom: '5px',\n        width: '100%',\n        textAlign: 'left'\n    },\n    inputWrapper: {\n        margin: '20px 0px'\n    },\n    input: {\n        padding: '5px'\n    },\n\n    download: {\n        backgroundColor: 'darkorange',\n        color: 'white',\n        width: '180px',\n        height: '50px',\n        borderRadius: '5px',\n        fontSize: '1.1em',\n        border: 'none',\n        transition: '1s',\n        textTransform: 'uppercase',\n        '&:hover': {\n            backgroundColor: '#ff6500',\n            transition: '1s',\n            cursor: 'pointer'\n        },\n    },\n\n    fileUploadContainer: {\n        padding: '10px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        width: '80%',\n    },\n    fileUploadWrapper: {\n        flex: 1,\n        display: 'flex',\n        // alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        padding: '10px',\n    },\n    fileUpload: {\n        height: '60px',\n        backgroundColor: 'white',\n        border: 'none',\n        flex: 1,\n        margin: '10px'\n    },\n    inputContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    }\n})","import React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport * as FileSaver from 'file-saver';\nimport { useStyles } from '../styles'\nimport { Input } from '@material-ui/core';\nimport { excelDateToJSDate } from '../utils'\n\n\nconst Nexus = () => {\n\n    const classes = useStyles()\n\n    const [rowInfo, setRowInfo] = useState([])\n\n    const [headers, setHeaders] = useState([])\n\n    const [mpn, setMpns] = useState({})\n\n    const readMpns = (data) => {\n        let renderedData = XLSX.read(data, { type: 'binary' });\n        const dataParse = XLSX.utils.sheet_to_json(renderedData.Sheets[renderedData.SheetNames[0]], { header: 1 });\n        for (let i = 1; i < dataParse.length; i++) {\n            mpn[dataParse[i][0]] = {\n                mpn: dataParse[i][1],\n                moq: dataParse[i][2],\n                lt: dataParse[i][3]\n            }\n        }\n    }\n\n    const readRaw = (data) => {\n        let renderedData = XLSX.read(data, { type: 'binary' });\n        const dataParse = XLSX.utils.sheet_to_json(renderedData.Sheets[renderedData.SheetNames[0]], { header: 1 });\n\n        let headers = dataParse[0]\n        headers.push(\"Committed Qty\")\n        headers.push(\"Commit ETA\")\n        headers.push(\"Balance Qty\")\n        headers.push(\"Balance Qty with Commit Qty \")\n        headers.push(\"MOQ\")\n        headers.push(\"LT\")\n        headers.push(\"Late Commit ETA\")\n        headers.push(\"Week Counter\")\n        setHeaders(headers)\n\n        for (let i = 1; i < dataParse.length; i++) {\n            // Filter JIT\n            if (dataParse[i][5] == \"JIT\") {\n                dataParse[i][3] = parseDate(dataParse[i][3])\n                dataParse[i][12] = parseDate(dataParse[i][12])\n                dataParse[i][15] = parseDate(dataParse[i][15])\n                rowInfo.push(dataParse[i])\n            }\n        }\n        // console.log(rowInfo)\n    }\n\n    const parseDate = (input) => {\n        if(input === undefined){\n            return null\n        }\n        if (typeof input === 'number') {\n            return excelDateToJSDate(input)\n        }\n        let da = input.split('/')\n        return new Date(da[2], da[0] - 1, da[1])\n    }\n\n    const onFileChange = (e, fileNo) => {\n        e.preventDefault();\n        var files = e.target.files, f = files[0];\n        var reader = new FileReader();\n        reader.onload = function (e) {\n            if (fileNo === 1)\n                readRaw(e.target.result)\n            else if (fileNo === 2)\n                readMpns(e.target.result)\n\n            // else\n        };\n        reader.readAsBinaryString(f)\n    }\n\n    const downloadFile = () => {\n        let wbData = []\n        let i = 0\n        while (i < rowInfo.length) {\n            let MPN = rowInfo[i][4]\n            while (i < rowInfo.length && MPN == rowInfo[i][4]) {\n                let rowData = {}\n                rowInfo[i].forEach((val, idx) => {\n                    rowData[headers[idx]] = val\n                })\n                if (rowData['PlexusPartNumber'] in mpn) {\n                    rowData['MOQ'] = mpn[rowData['PlexusPartNumber']].moq\n                    rowData['LT'] = mpn[rowData['PlexusPartNumber']].lt\n                }\n                wbData.push(rowData)\n                i++\n            }\n            // add 2 blank rows\n            wbData.push({})\n            wbData.push({})\n        }\n\n        wbData.forEach((row, i) => {\n            if (Object.keys(wbData[i]).length == 0) {\n                // has a data row above - indicates that this is the first row after a block of data\n                if (Object.keys(wbData[i - 1]).length > 1) {\n                    if (wbData[i - 1]['PlexusPartNumber'] in mpn) {\n                        row['PlexusPartNumber'] = mpn[wbData[i - 1]['PlexusPartNumber']].mpn\n                    }\n                }\n            }\n        })\n\n        let ws = XLSX.utils.json_to_sheet(wbData, { header: headers })\n\n        ws['!ref'] = XLSX.utils.encode_range({\n            s: { r: 0, c: 0 },\n            e: { r: wbData.length + 1, c: 24 }\n        })\n\n        wbData.forEach((row, i) => {\n            let er = i + 2\n            let balanceQty = ''\n            let balanceQtyCommit = ''\n            let commitEta = ''\n            let weekCounter = ''\n            let moq = ''\n            let lt = ''\n            if (Object.keys(wbData[i]).length > 1) {\n                if (i == 0 || (Object.keys(wbData[i - 1]).length <= 1 && Object.keys(wbData[i - 2]).length <= 1)) {\n                    balanceQty = `H${er}+I${er}+O${er}-N${er}`\n                    balanceQtyCommit = `H${er}+I${er}+O${er}+R${er}-N${er}`\n                } else {\n                    balanceQty = `T${er - 1}-N${er}+O${er}`\n                    balanceQtyCommit = `U${er - 1}-N${er}+O${er}+R${er}`\n                }\n                commitEta = `=IF(S${er}>P${er},1,\"\")`\n                weekCounter = `=INT((TODAY()-P${er})/7)`\n                moq = row['MOQ']\n                lt = row['LT']\n                // let marker = `IF(U${er-1}>=0, IF(U${er}<=0, \"<-- Highlight row\",\"\"),\"\")`\n\n                let balanceQtyCellRef = XLSX.utils.encode_cell({ r: er - 1, c: 19 })\n                let balanceQtyCommitCellRef = XLSX.utils.encode_cell({ r: er - 1, c: 20 })\n                let moqCellRef = XLSX.utils.encode_cell({ r: er - 1, c: 21 })\n                let ltCellRef = XLSX.utils.encode_cell({ r: er - 1, c: 22 })\n                let commitEtaCellRef = XLSX.utils.encode_cell({ r: er - 1, c: 23 })\n                let weekCounterCellRef = XLSX.utils.encode_cell({ r: er - 1, c: 24 })\n                // let markerCellRef = XLSX.utils.encode_cell({ r: er - 1, c: 21 })\n\n                ws[balanceQtyCellRef] = { f: balanceQty }\n                ws[balanceQtyCommitCellRef] = { f: balanceQtyCommit }\n                ws[commitEtaCellRef] = { f: commitEta }\n                ws[weekCounterCellRef] = { f: weekCounter }\n                ws[moqCellRef] = { v: moq }\n                ws[ltCellRef] = { v: lt }\n                // ws[markerCellRef] = { f: marker }\n            }\n        })\n\n        let wb = { Sheets: { 'data': ws }, SheetNames: ['data'] }\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const dd = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8' });\n        FileSaver.saveAs(dd, 'Data.xlsx');\n    }\n\n\n    return (\n        <div className={classes.root}>\n            <span style={{ fontSize: '30px', marginBottom: '30px', textAlign: 'center', fontWeight: 'bold' }}>\n                Plexus JIT Program\n            </span>\n            <div className={classes.fileUploadContainer} style={{ flexDirection: 'row', width: '60%' }}>\n                <div className={classes.fileUploadWrapper}>\n                    <span className={classes.label}>Plexus forecast file</span>\n                    <Input onChange={(event) => onFileChange(event, 1)} type=\"file\" className={classes.fileUpload} />\n                </div>\n                <div className={classes.fileUploadWrapper}>\n                    <span className={classes.label}>MPN List</span>\n                    <Input onChange={(event) => onFileChange(event, 2)} type=\"file\" className={classes.fileUpload} />\n                </div>\n            </div>\n            <div style={{ marginTop: '50px' }}>\n                <button onClick={() => downloadFile()} className={classes.download}>\n                    Download\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default Nexus;","export const excelDateToJSDate = (serial) => {\n    var utc_days = Math.floor(serial - 25569);\n    var utc_value = utc_days * 86400;\n    var date_info = new Date(utc_value * 1000);\n    return new Date(date_info.getFullYear(), date_info.getDate() - 1, date_info.getMonth() + 1);\n}","import React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport * as FileSaver from 'file-saver';\nimport { useStyles } from '../styles'\nimport { Input } from '@material-ui/core';\n\nconst Compare = () => {\n\n    const classes = useStyles()\n\n    const [dd, setDD] = useState({})\n\n    const [arr, setArr] = useState([])\n\n    const parseCustomerPriceList = (data) => {\n        let renderedData = XLSX.read(data, { type: 'binary' });\n        const dataParse = XLSX.utils.sheet_to_json(renderedData.Sheets[renderedData.SheetNames[0]], { header: 1 });\n\n        for (let i = 1; i < dataParse.length; i++) {\n            let stockCode = dataParse[i][0]\n            let cpoDate = dataParse[i][1]\n            let moq = dataParse[i][2]\n            let price = dataParse[i][3]\n\n            if (!(stockCode in dd)) {\n                dd[stockCode] = {\n                    \"customer_date\": excelDateToJSDate(cpoDate),\n                    \"moq\": moq,\n                    \"customer_price\": price,\n                }\n            } else if (!(dd[stockCode][\"customer_date\"] in dd[stockCode])) {\n                dd[stockCode] = {\n                    ...dd[stockCode],\n                    \"customer_date\": excelDateToJSDate(cpoDate),\n                    \"moq\": moq,\n                    \"customer_price\": price,\n                }\n            } else if (excelDateToJSDate(cpoDate) > excelDateToJSDate(dd[stockCode][\"customer_date\"])) {\n                dd[stockCode] = {\n                    ...dd[stockCode],\n                    \"customer_date\": excelDateToJSDate(cpoDate),\n                    \"moq\": moq,\n                    \"customer_price\": price,\n                }\n            }\n        }\n    }\n\n    const parseSupplierPriceList = (data) => {\n        let renderedData = XLSX.read(data, { type: 'binary' });\n        const dataParse = XLSX.utils.sheet_to_json(renderedData.Sheets[renderedData.SheetNames[0]], { header: 1 });\n\n        for (let i = 1; i < dataParse.length; i++) {\n            let receiveDate = dataParse[i][0]\n            let stockCode = dataParse[i][1]\n            let price = dataParse[i][2]\n\n            if (receiveDate === \"Forwarder :\")\n                continue\n\n            if (!(stockCode in dd)) {\n                dd[stockCode] = {\n                    \"receive_date\": excelDateToJSDate(receiveDate),\n                    \"supply_price\": price,\n                }\n            } else if (!(dd[stockCode][\"receive_date\"] in dd[stockCode])) {\n                dd[stockCode] = {\n                    ...dd[stockCode],\n                    \"receive_date\": excelDateToJSDate(receiveDate),\n                    \"supply_price\": price,\n                }\n            } else if (excelDateToJSDate(receiveDate) > excelDateToJSDate(dd[stockCode][\"receive_date\"])) {\n                dd[stockCode] = {\n                    ...dd[stockCode],\n                    \"receive_date\": excelDateToJSDate(receiveDate),\n                    \"supply_price\": price,\n                }\n            }\n        }\n    }\n\n    const parseStockList = (data) => {\n        let renderedData = XLSX.read(data, { type: 'binary' });\n        const dataParse = XLSX.utils.sheet_to_json(renderedData.Sheets[renderedData.SheetNames[0]], { header: 1 });\n\n        for (let i = 1; i < dataParse.length; i++) {\n            let stockCode = dataParse[i][0]\n            arr.push(stockCode)\n        }\n    }\n\n    const onFileChange = (e, fileNo) => {\n        e.preventDefault();\n        var files = e.target.files, f = files[0];\n        var reader = new FileReader();\n        reader.onload = function (e) {\n            if (fileNo === 1)\n                parseStockList(e.target.result)\n            else if (fileNo === 2)\n                parseCustomerPriceList(e.target.result)\n            else\n                parseSupplierPriceList(e.target.result)\n        };\n        reader.readAsBinaryString(f)\n    }\n\n    const excelDateToJSDate = (serial) => {\n        var utc_days = Math.floor(serial - 25569);\n        var utc_value = utc_days * 86400;\n        var date_info = new Date(utc_value * 1000);\n        return new Date(date_info.getFullYear(), date_info.getMonth(), date_info.getDate());\n    }\n\n    const downloadFile = () => {\n        /* Write and Download File */\n        let workbookRows = []\n        let myHeader = ['Stock Code (Max 30 Chars)', \"MOQ\", \"Supplier Price\", \"Customer Price\"]\n\n        for (let i = 0; i < arr.length; i++) {\n            let row = {}\n            let stockCode = arr[i]\n            if (stockCode in dd) {\n                let moq = dd[stockCode][\"moq\"]\n                let supplier_price = dd[stockCode][\"supply_price\"]\n                let customer_price = dd[stockCode][\"customer_price\"]\n\n                row['Stock Code (Max 30 Chars)'] = stockCode\n                row['MOQ'] = moq === undefined ? \"-\" : moq\n                row['Supplier Price'] = supplier_price === undefined ? \"-\" : supplier_price\n                row['Customer Price'] = customer_price === undefined ? \"-\" : customer_price\n            } else {\n                row['Stock Code (Max 30 Chars)'] = stockCode\n                row['MOQ'] = \"-\"\n                row['Supplier Price'] = \"-\"\n                row['Customer Price'] = \"-\"\n            }\n            workbookRows.push(row)\n        }\n\n        const ws = XLSX.utils.json_to_sheet(workbookRows, { header: myHeader })\n        let wb = { Sheets: { 'data': ws }, SheetNames: ['data'] }\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const f = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8' });\n        FileSaver.saveAs(f, 'Data.xlsx');\n\n    }\n\n\n    return (\n        <div className={classes.root}>\n            <span style={{ fontSize: '30px', marginBottom: '30px', textAlign: 'center', fontWeight: 'bold' }}>\n                Online Stock Pricing\n            </span>\n            <div className={classes.fileUploadContainer} style={{ flexDirection: 'row', width: '60%' }}>\n                <div className={classes.fileUploadWrapper} style={{ width: '30%' }}>\n                    <span className={classes.label}>Stock List</span>\n                    <Input onChange={(event) => onFileChange(event, 1)} type=\"file\" className={classes.fileUpload} />\n                </div>\n                <div className={classes.fileUploadWrapper} style={{ width: '30%' }}>\n                    <span className={classes.label}>Customer Price</span>\n                    <Input onChange={(event) => onFileChange(event, 2)} type=\"file\" className={classes.fileUpload} />\n                </div>\n                <div className={classes.fileUploadWrapper} style={{ width: '30%' }}>\n                    <span className={classes.label}>Supplier Price</span>\n                    <Input onChange={(event) => onFileChange(event, 3)} type=\"file\" className={classes.fileUpload} />\n                </div>\n            </div>\n            <div style={{ marginTop: '50px' }}>\n                <button onClick={() => downloadFile()} className={classes.download}>\n                    Download\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default Compare;","import React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport * as FileSaver from 'file-saver';\nimport { useStyles } from '../styles'\nimport { Button, Input } from '@material-ui/core';\n\nconst Compile = () => {\n\n  const [fileA, setFileA] = useState({})\n  const [fileB, setFileB] = useState({})\n\n  const [q, setQs] = useState({})\n  const [titleColumn, setTitleColumn] = useState(\"\")\n\n  const classes = useStyles()\n\n  const excelReader = (data, isFirstFile) => {\n    let renderedData = XLSX.read(data, { type: 'binary' });\n    const dataParse = XLSX.utils.sheet_to_json(renderedData.Sheets[renderedData.SheetNames[0]], { header: 1 });\n\n    setTitleColumn(dataParse[0][0])\n\n    for (let i = 1; i < dataParse[0].length; i++) {\n      let key = parseInt(dataParse[0][i])\n      if (!(key in q))\n        q[key] = 1\n    }\n\n    setQs(q)\n\n    let fileDict = {}\n\n    for (let i = 1; i < dataParse.length; i++) {\n      let partName = dataParse[i][0]\n\n      let priceQuantity = {}\n      for (let j = 1; j < dataParse[i].length; j++) {\n        let quantity = parseInt(dataParse[0][j])\n        let value = dataParse[i][j]\n        priceQuantity[quantity] = value\n      }\n\n      fileDict[partName] = priceQuantity\n    }\n\n    delete fileDict[undefined]\n    isFirstFile ? setFileA(fileDict) : setFileB(fileDict)\n  }\n\n  const onFileChange = (e, isFirstFile) => {\n    e.preventDefault();\n    var files = e.target.files, f = files[0];\n    var reader = new FileReader();\n    reader.onload = function (e) {\n      excelReader(e.target.result, isFirstFile)\n    };\n    reader.readAsBinaryString(f)\n  }\n\n  const downloadFile = () => {\n    // compare 2 files and take lowest value\n    if (Object.keys(fileB).length !== 0) {\n      let fileAKeys = Object.keys(fileA)\n      let fileBKeys = Object.keys(fileB)\n      let combined = fileAKeys.concat(fileBKeys)\n\n      let uniqueItems = [...new Set(combined)]\n\n      let quantities = Object.keys(q)\n\n      for (let i = 0; i < uniqueItems.length; i++) {\n        let individualItemPrice = {}\n        /* Item does not exist in File A but exits in File B */\n        if (fileA[uniqueItems[i]] === undefined) {\n          for (let j = 0; j < quantities.length; j++) {\n            individualItemPrice[quantities[j]] = fileB[uniqueItems[i]][quantities[j]]\n          }\n        }\n        /* Item does not exist in File B but exits in File A */\n        else if (fileB[uniqueItems[i]] === undefined) {\n          for (let j = 0; j < quantities.length; j++) {\n            individualItemPrice[quantities[j]] = fileA[uniqueItems[i]][quantities[j]]\n          }\n        }\n        /* Item Exists in both */\n        else {\n          for (let j = 0; j < quantities.length; j++) {\n            let A = fileA[uniqueItems[i]]\n            let B = fileB[uniqueItems[i]]\n\n            if (A[quantities[j]] === undefined) {\n              individualItemPrice[quantities[j]] = B[quantities[j]]\n            } else if (B[quantities[j]] === undefined) {\n              individualItemPrice[quantities[j]] = A[quantities[j]]\n            } else {\n              individualItemPrice[quantities[j]] = A[quantities[j]] < B[quantities[j]] ? A[quantities[j]] : B[quantities[j]]\n            }\n          }\n        }\n\n        fileA[uniqueItems[i]] = individualItemPrice\n      }\n    }\n\n    /* Write and Download File */\n    let keys = Object.keys(fileA)\n    let wbData = []\n\n    let myHeader = ['MPN']\n\n    let pl = fileA[keys[0]]\n    for (let i = 0; i < Object.keys(pl).length; i++) {\n      myHeader.push(Object.keys(pl)[i])\n    }\n\n    for (let i = 0; i < keys.length; i++) {\n      let rowData = {}\n\n      /* Part Name */\n      rowData['MPN'] = keys[i]\n\n      /* Quantity - Prices */\n      let priceList = fileA[keys[i]]\n\n      let quantityArr = Object.keys(priceList)\n      let priceArr = Object.values(priceList)\n\n      for (let j = 0; j < quantityArr.length; j++) {\n        if (!isNaN(parseFloat(priceArr[j]))) {\n          rowData[quantityArr[j]] = priceArr[j] * q[quantityArr[j]]\n        }\n      }\n      wbData.push(rowData)\n    }\n\n    const ws = XLSX.utils.json_to_sheet(wbData, { header: myHeader })\n    let wb = { Sheets: { 'data': ws }, SheetNames: ['data'] }\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n    const dd = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8' });\n    FileSaver.saveAs(dd, 'Data.xlsx');\n  }\n\n  const updateMultiplier = (mult, value) => {\n    let tmp = JSON.parse(JSON.stringify(q))\n    if (mult.toString().length === 0) {\n      tmp[value] = 1\n      setQs(tmp)\n    } else {\n      tmp[value] = parseFloat(mult)\n      setQs(tmp)\n    }\n  }\n\n\n  return (\n    <div className={classes.root}>\n      <span style={{ fontSize: '30px', marginBottom: '30px', textAlign: 'center', fontWeight: 'bold' }}>\n        Price Multiplier\n      </span>\n      <div className={classes.fileUploadContainer} style={{ flexDirection: 'row', width: '60%' }}>\n        <div className={classes.fileUploadWrapper}>\n          <span className={classes.label}>File 1</span>\n          <Input onChange={(event) => onFileChange(event, true)} type=\"file\" className={classes.fileUpload} />\n        </div>\n        <div className={classes.fileUploadWrapper}>\n          <span className={classes.label}>File 2</span>\n          <Input onChange={(event) => onFileChange(event, false)} type=\"file\" disabled={Object.keys(fileA).length === 0} className={classes.fileUpload} />\n        </div>\n      </div>\n      <section className={classes.fileUploadContainer}>\n        <span className={classes.label}>\n          Mark Up Value <span style={{ color: 'red', fontSize: '13px' }}>(numbers/ decimal only)</span>\n        </span>\n        <div className={Object.keys(q).length !== 0 && classes.inputWrapper}>\n          {\n            Object.keys(q).map((value) => {\n              return (\n                <div key={value} className={classes.input}>\n                  <label style={{ paddingRight: '10px' }}>\n                    Q - {value}\n                  </label>\n                  <input type=\"number\" onChange={(e) => updateMultiplier(e.target.value, value)} value={q[value]} />\n                </div>\n              )\n            })\n          }\n        </div>\n        {\n          Object.keys(q).length === 0 &&\n          <div style={{ width: '100%' }}>\n            <h4 style={{ color: \"#333\", textTransform: 'uppercase', margin: '0px', opacity:'0.8' }}>[Multiplier fields will display once file is uploaded]</h4>\n          </div>\n        }\n        <button onClick={() => downloadFile()} className={classes.download} disabled={Object.keys(fileA).length === 0}>\n          Download\n        </button>\n      </section>\n      <div style={{ justifyContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'column' }}>\n        <h3>Your Uploaded File <span style={{ fontWeight: 'bold', color: 'red', fontSize: '20px' }}>MUST</span> follow the following format: </h3>\n        <img alt=\"Sample Format\" src={require('../assets/Format.png')} width={\"80%\"} style={{ borderRadius: \"10px\" }} />\n      </div>\n    </div>\n  );\n}\n\nexport default Compile;\n","import React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport * as FileSaver from 'file-saver';\nimport { useStyles } from '../styles'\nimport { Input } from '@material-ui/core';\n\nconst PlexusForecast = () => {\n\n    const classes = useStyles()\n\n    const [oldForecast, setOldForecast] = useState({})\n    const [newForecast, setNewForecast] = useState({})\n\n    const onFileChange = (e, fileNo) => {\n        e.preventDefault();\n        var files = e.target.files, f = files[0];\n        var reader = new FileReader();\n        reader.onload = function (e) {\n            readRaw(e.target.result, fileNo)\n        };\n        reader.readAsBinaryString(f)\n    }\n\n    const readRaw = (data, num) => {\n        let renderedData = XLSX.read(data, { type: 'binary' });\n        const dataParse = XLSX.utils.sheet_to_json(renderedData.Sheets[renderedData.SheetNames[0]], { header: 1 });\n        let parts = {}\n        for (let i = 1; i < dataParse.length; i++) {\n            let partNumber = dataParse[i][4]\n            let facilityNumber = dataParse[i][2]\n            let combined = facilityNumber + partNumber\n            if (!(combined in parts)) {\n                parts[combined] = {\n                    facilityNumber,\n                    partNumber\n                }\n            }\n        }\n        num === 1 ? setOldForecast(parts) : setNewForecast(parts)\n    }\n\n    const calculateDifference = () => {\n        let a = Object.keys(oldForecast)\n        let b = Object.keys(newForecast)\n        let intersection = a.filter(x => b.includes(x))\n        let inA = a.filter(x => !b.includes(x))\n        let inB = b.filter(x => !a.includes(x))\n        downloadFile(intersection, inA, inB)\n    }\n\n    const downloadFile = (intersection, inOld, inNew) => {\n        let wbData = []\n        // fill old business\n        if (inOld.length === 0) {\n            wbData.push({ 'SITE': 'N/A' })\n            wbData.push({ 'NOT IN FORECAST': 'N/A' })\n        }\n        for (let i = 0; i < inOld.length; i++) {\n            let part = inOld[i]\n            let rowInfo = {}\n            rowInfo['SITE'] = oldForecast[part]['facilityNumber']\n            rowInfo['NOT IN FORECAST'] = oldForecast[part]['partNumber']\n            wbData.push(rowInfo)\n        }\n        wbData.push({})\n        // fill new business\n        wbData.push({ 'SITE': '' })\n        wbData.push({ 'NOT IN FORECAST': 'NEWLY AWARDED PARTS' })\n        if (inNew.length === 0) {\n            wbData.push({ 'SITE': 'N/A' })\n            wbData.push({ 'NOT IN FORECAST': 'N/A' })\n        }\n        for (let i = 0; i < inNew.length; i++) {\n            let part = inNew[i]\n            let rowInfo = {}\n            rowInfo['SITE'] = newForecast[part]['facilityNumber']\n            rowInfo['NOT IN FORECAST'] = newForecast[part]['partNumber']\n            wbData.push(rowInfo)\n        }\n        wbData.push({})\n        // fill overlap\n        wbData.push({ 'SITE': '' })\n        wbData.push({ 'NOT IN FORECAST': 'EXISTING BUSINESS' })\n        if (intersection.length === 0) {\n            wbData.push({ 'SITE': 'N/A' })\n            wbData.push({ 'NOT IN FORECAST': 'N/A' })\n        }\n        for (let i = 0; i < intersection.length; i++) {\n            let part = intersection[i]\n            let rowInfo = {}\n            rowInfo['SITE'] = oldForecast[part]['facilityNumber']\n            rowInfo['NOT IN FORECAST'] = oldForecast[part]['partNumber']\n            wbData.push(rowInfo)\n        }\n        let ws = XLSX.utils.json_to_sheet(wbData)\n        ws['!ref'] = XLSX.utils.encode_range({\n            s: { r: 0, c: 0 },\n            e: { r: wbData.length + 1, c: 1 }\n        })\n        let wb = { Sheets: { 'data': ws }, SheetNames: ['data'] }\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const dd = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8' });\n        FileSaver.saveAs(dd, 'Plexus_Forecast_Comparison.xlsx');\n    }\n\n    return (\n        <div className={classes.root}>\n            <span style={{ fontSize: '30px', marginBottom: '30px', textAlign: 'center', fontWeight: 'bold' }}>\n                Plexus Forecast Comparison\n            </span>\n            <div className={classes.fileUploadContainer} style={{ flexDirection: 'row', width: '60%' }}>\n                <div className={classes.fileUploadWrapper}>\n                    <span className={classes.label}>Old file</span>\n                    <Input onChange={(event) => onFileChange(event, 1)} type=\"file\" className={classes.fileUpload} />\n                </div>\n                <div className={classes.fileUploadWrapper}>\n                    <span className={classes.label}>New file</span>\n                    <Input onChange={(event) => onFileChange(event, 2)} type=\"file\" className={classes.fileUpload} />\n                </div>\n            </div>\n            <div style={{ marginTop: '50px' }}>\n                <button onClick={() => calculateDifference()} className={classes.download}>\n                    Export\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default PlexusForecast;","import React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport * as FileSaver from 'file-saver';\nimport { useStyles } from '../styles'\nimport { Input } from '@material-ui/core';\n\nconst JabilForecast = () => {\n\n    const classes = useStyles()\n\n    const [oldForecast, setOldForecast] = useState({})\n    const [newForecast, setNewForecast] = useState({})\n\n    const onFileChange = (e, fileNo) => {\n        e.preventDefault();\n        var files = e.target.files, f = files[0];\n        var reader = new FileReader();\n        reader.onload = function (e) {\n            readRaw(e.target.result, fileNo)\n        };\n        reader.readAsBinaryString(f)\n    }\n\n    const readRaw = (data, num) => {\n        let renderedData = XLSX.read(data, { type: 'binary' });\n        const dataParse = XLSX.utils.sheet_to_json(renderedData.Sheets[renderedData.SheetNames[0]], { header: 1 });\n        let parts = {}\n        for (let i = 3; i < dataParse.length; i++) {\n            let buyerPartCode = dataParse[i][2]\n            let mpn = dataParse[i][3]\n            let c = buyerPartCode + ',' + mpn\n            if (!(c in parts)) {\n                parts[c] = true\n            }\n        }\n        num === 1 ? setOldForecast(parts) : setNewForecast(parts)\n    }\n\n    const calculateDifference = () => {\n        let a = Object.keys(oldForecast)\n        let b = Object.keys(newForecast)\n        let intersection = a.filter(x => b.includes(x))\n        let inA = a.filter(x => !b.includes(x))\n        let inB = b.filter(x => !a.includes(x))\n        downloadFile(intersection, inA, inB)\n    }\n\n    const downloadFile = (intersection, inOld, inNew) => {\n        let wbData = []\n        // fill old business\n        if (inOld.length === 0){\n            wbData.push({'NOT IN FORECAST': 'N/A'})\n        }\n        for (let i = 0; i < inOld.length; i++) {\n            let cArr = inOld[i].split(',')\n            let buyerPartCode = cArr[0]\n            let mpn = cArr[1]\n            let rowInfo = {}\n            rowInfo['NOT IN FORECAST'] = buyerPartCode\n            rowInfo[''] = mpn\n            wbData.push(rowInfo)\n        }\n        wbData.push({})\n        // fill new business\n        wbData.push({'NOT IN FORECAST': 'NEWLY AWARDED PARTS'})\n        if (inNew.length === 0){\n            wbData.push({'NOT IN FORECAST': 'N/A'})\n        }\n        for (let i = 0; i < inNew.length; i++) {\n            let cArr = inNew[i].split(',')\n            let buyerPartCode = cArr[0]\n            let mpn = cArr[1]\n            let rowInfo = {}\n            rowInfo['NOT IN FORECAST'] = buyerPartCode\n            rowInfo[''] = mpn\n            wbData.push(rowInfo)\n        }\n        wbData.push({})\n        // fill overlap\n        wbData.push({'NOT IN FORECAST': 'EXISTING BUSINESS'})\n        if (intersection.length === 0){\n            wbData.push({'NOT IN FORECAST': 'N/A'})\n        }\n        for (let i = 0; i < intersection.length; i++) {\n            let cArr = intersection[i].split(',')\n            let buyerPartCode = cArr[0]\n            let mpn = cArr[1]\n            let rowInfo = {}\n            rowInfo['NOT IN FORECAST'] = buyerPartCode\n            rowInfo[''] = mpn\n            wbData.push(rowInfo)\n        }\n        let ws = XLSX.utils.json_to_sheet(wbData)\n        ws['!ref'] = XLSX.utils.encode_range({\n            s: { r: 0, c: 0 },\n            e: { r: wbData.length + 1, c: 1 }\n        })\n        let wb = { Sheets: { 'data': ws }, SheetNames: ['data'] }\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const dd = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8' });\n        FileSaver.saveAs(dd, 'Jabil_Forecast_Comparison.xlsx');\n    }\n\n\n    return (\n        <div className={classes.root}>\n            <span style={{ fontSize: '30px', marginBottom: '30px', textAlign: 'center', fontWeight: 'bold' }}>\n                Jabil Forecast Comparison\n            </span>\n            <div className={classes.fileUploadContainer} style={{ flexDirection: 'row', width: '60%' }}>\n                <div className={classes.fileUploadWrapper}>\n                    <span className={classes.label}>Old file</span>\n                    <Input onChange={(event) => onFileChange(event, 1)} type=\"file\" className={classes.fileUpload} />\n                </div>\n                <div className={classes.fileUploadWrapper}>\n                    <span className={classes.label}>New file</span>\n                    <Input onChange={(event) => onFileChange(event, 2)} type=\"file\" className={classes.fileUpload} />\n                </div>\n            </div>\n            <div style={{ marginTop: '50px' }}>\n                <button onClick={() => calculateDifference()} className={classes.download}>\n                    Export\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default JabilForecast;","import React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport * as FileSaver from 'file-saver';\nimport { useStyles } from '../styles'\nimport { Input } from '@material-ui/core';\nimport Excel from 'exceljs';\nimport { saveAs } from 'file-saver'\n\nconst Rescheduler = () => {\n    console.log('updated!')\n    const padding = \"_____\"\n\n    const classes = useStyles()\n\n    const [oldForecast, setOldForecast] = useState({})\n    const [newForecast, setNewForecast] = useState({})\n\n    const [store, setStore] = useState({})\n\n    const onFileChange = (e) => {\n        e.preventDefault();\n        var files = e.target.files, f = files[0];\n        var reader = new FileReader();\n        reader.onload = function (e) {\n            readRaw(e.target.result)\n        };\n        reader.readAsBinaryString(f)\n    }\n\n    const isEmptyOrUndefined = (value) => {\n        return value === '' || value === undefined\n    }\n\n    const compare = (a, b) => {\n        if (a.del_date < b.del_date) {\n            return -1;\n        }\n        if (a.del_date > b.del_date) {\n            return 1;\n        }\n        return 0;\n    }\n\n    const parseDate = (num) => {\n        var utc_value = Math.floor(num- 25569) * 86400;\n        var date_info = new Date(utc_value * 1000);\n        return date_info;\n    }\n\n    const readRaw = (data) => {\n        let renderedData = XLSX.read(data, { type: 'binary', cellDates: false, callNF: false, cellText: false });\n        const dataParse = XLSX.utils.sheet_to_json(renderedData.Sheets[renderedData.SheetNames[0]], { header: 1 });\n        for (let i = 2; i < dataParse.length; i++) {\n            // process system data first\n            let line = dataParse[i][0]\n            let sys_po = isEmptyOrUndefined(dataParse[i][1]) ? \"\" : dataParse[i][1]\n            let sys_cpn = isEmptyOrUndefined(dataParse[i][2]) ? \"\" : dataParse[i][2]\n            let sys_po_cpn = sys_po + padding + sys_cpn\n\n            let stock_code = isEmptyOrUndefined(dataParse[i][3]) ? \"\" : dataParse[i][3]\n            let sys_del_qty = isEmptyOrUndefined(dataParse[i][4]) ? \"\" : dataParse[i][4]\n\n            let sys_del_date = isEmptyOrUndefined(dataParse[i][5]) ? \"\" : dataParse[i][5]\n            sys_del_date = parseDate(sys_del_date)\n\n            let sys_stock = isEmptyOrUndefined(dataParse[i][6]) ? \"\" : dataParse[i][6]\n            let sys_remarks = isEmptyOrUndefined(dataParse[i][7]) ? \"\" : dataParse[i][7]\n\n            // ensure row is not empty\n            if (sys_po_cpn !== padding) {\n                if (!(sys_po_cpn in store)) {\n                    // add to store\n                    store[sys_po_cpn] = {\n                        \"system\": [],\n                        \"customer\": []\n                    }\n                    store[sys_po_cpn][\"system\"].push({\n                        line: line,\n                        stock_code: stock_code,\n                        del_qty: sys_del_qty,\n                        del_date: sys_del_date,\n                        stock: sys_stock,\n                        remarks: sys_remarks\n                    })\n                } else {\n                    // just append to existing\n                    store[sys_po_cpn][\"system\"].push({\n                        line: line,\n                        stock_code: stock_code,\n                        del_qty: sys_del_qty,\n                        del_date: sys_del_date,\n                        stock: sys_stock,\n                        remarks: sys_remarks\n                    })\n                }\n            }\n\n            let cus_cpn = isEmptyOrUndefined(dataParse[i][8]) ? \"\" : dataParse[i][8]\n            let cus_po = isEmptyOrUndefined(dataParse[i][10]) ? \"\" : dataParse[i][10]\n            let cus_po_cpn = cus_po + padding + cus_cpn\n\n            let cus_po_line = isEmptyOrUndefined(dataParse[i][11]) ? \"\" : dataParse[i][11]\n            let cus_qty = isEmptyOrUndefined(dataParse[i][12]) ? \"\" : dataParse[i][12]\n            let cus_date = isEmptyOrUndefined(dataParse[i][13]) ? \"\" : dataParse[i][13]\n            cus_date = parseDate(cus_date)\n\n            let cus_action = isEmptyOrUndefined(dataParse[i][14]) ? \"\" : dataParse[i][14]\n\n            // ensure row is not empty\n            if (cus_po_cpn !== padding) {\n                if (!(cus_po_cpn in store)) {\n                    // add to store\n                    store[cus_po_cpn] = {\n                        \"system\": [],\n                        \"customer\": []\n                    }\n                    store[cus_po_cpn][\"customer\"].push({\n                        line: cus_po_line,\n                        del_qty: cus_qty,\n                        del_date: cus_date,\n                        remarks: cus_action,\n                    })\n                } else {\n                    // just append to existing\n                    store[cus_po_cpn][\"customer\"].push({\n                        line: cus_po_line,\n                        del_qty: cus_qty,\n                        del_date: cus_date,\n                        remarks: cus_action,\n                    })\n                }\n            }\n        }\n        console.log(store)\n    }\n\n    const compile = async () => {\n\n        const workbook = new Excel.Workbook();\n        const worksheet = workbook.addWorksheet(\"My Sheet\");\n\n        let borderStyle = {\n            top: { style: 'thin' },\n            left: { style: 'thin' },\n            bottom: { style: 'thin' },\n            right: { style: 'thin' }\n        };\n\n        // top header row\n        const cell1 = worksheet.getCell('A1');\n        cell1.value = 'SYSTEM SCHEDULE'\n        // fill A3 with solid coral\n        worksheet.getCell('A1').border = borderStyle \n        worksheet.getCell('A1').fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: { argb: 'D9E1F2' },\n        }\n        const cell2 = worksheet.getCell('I1')\n        worksheet.getCell('I1').border = borderStyle \n        cell2.value = 'CUSTOMER RESCHEDULE'\n        worksheet.getCell('I1').fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: { argb: 'FFC000' },\n        }\n\n        worksheet.mergeCells('A1', 'H1');\n        worksheet.mergeCells('I1', 'L1');\n        worksheet.getCell('A1').alignment = { vertical: 'middle', horizontal: 'center' };\n        worksheet.getCell('I1').alignment = { vertical: 'middle', horizontal: 'center' };\n\n        // main header\n        worksheet.addRow(['Line', 'CPO Number', 'CPN', 'Stock Code', 'Del-Qty', 'Del-Date', 'Stock', 'Remarks', 'Report Line', 'Open PO Qty', 'Reschedule Date', 'Action Request'])\n        let fillStyleLB = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: { argb: 'D9E1F2' },\n        }\n        worksheet.getCell('A2').fill = fillStyleLB\n        worksheet.getCell('B2').fill = fillStyleLB\n        worksheet.getCell('C2').fill = fillStyleLB\n        worksheet.getCell('D2').fill = fillStyleLB\n        worksheet.getCell('E2').fill = fillStyleLB\n        worksheet.getCell('F2').fill = fillStyleLB\n        worksheet.getCell('G2').fill = fillStyleLB\n        worksheet.getCell('H2').fill = fillStyleLB\n\n        worksheet.getCell('A2').border = borderStyle\n        worksheet.getCell('B2').border = borderStyle\n        worksheet.getCell('C2').border = borderStyle\n        worksheet.getCell('D2').border = borderStyle\n        worksheet.getCell('E2').border = borderStyle\n        worksheet.getCell('F2').border = borderStyle\n        worksheet.getCell('G2').border = borderStyle\n        worksheet.getCell('H2').border = borderStyle\n\n        let fillStyleG = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: { argb: 'D0CECE' },\n        }\n        worksheet.getCell('I2').fill = fillStyleG\n        worksheet.getCell('J2').fill = fillStyleG\n        worksheet.getCell('K2').fill = fillStyleG\n        worksheet.getCell('L2').fill = fillStyleG\n\n        worksheet.getCell('I2').border = borderStyle\n        worksheet.getCell('J2').border = borderStyle\n        worksheet.getCell('K2').border = borderStyle\n        worksheet.getCell('L2').border = borderStyle\n\n        // content\n        for (const [key, value] of Object.entries(store)) {\n            let [po, cpn] = key.split(padding)\n            let system = value[\"system\"]\n            system.sort(() => compare);\n            let customer = value[\"customer\"]\n            customer.sort(() => compare);\n            let totalRows = Math.max(system.length, customer.length)\n            for (let i = 0; i < totalRows; i++) {\n                let d = Array(12).fill('-')\n                d[1] = po\n                d[2] = cpn\n                if (typeof system[i] !== 'undefined') {\n                    d[0] = system[i].line\n                    d[3] = system[i].stock_code\n                    d[4] = system[i].del_qty\n                    d[5] = system[i].del_date\n                    d[6] = system[i].stock\n                    d[7] = system[i].remarks\n                }\n                if (typeof customer[i] !== 'undefined') {\n                    d[8] = customer[i].line\n                    d[9] = customer[i].del_qty\n                    d[10] = customer[i].del_date\n                    d[11] = customer[i].remarks\n                }\n                worksheet.addRow(d)\n            }\n        }\n\n        const buf = await workbook.xlsx.writeBuffer()\n        saveAs(new Blob([buf]), 'Rescheduled.xlsx')\n    }\n\n    return (\n        <div className={classes.root}>\n            <span style={{ fontSize: '30px', marginBottom: '30px', textAlign: 'center', fontWeight: 'bold' }}>\n                Reschedule Report\n            </span>\n            <div className={classes.fileUploadContainer} style={{ flexDirection: 'row', width: '60%' }}>\n                <div className={classes.fileUploadWrapper}>\n                    <span className={classes.label}>Rescheduler upload file</span>\n                    <Input onChange={(event) => onFileChange(event)} type=\"file\" className={classes.fileUpload} />\n                </div>\n            </div>\n            <div style={{ marginTop: '50px' }}>\n                <button onClick={() => compile()} className={classes.download}>\n                    Export\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default Rescheduler;","import React, { useState } from 'react';\nimport { useStyles } from '../styles'\nimport { Backdrop, CircularProgress, Input } from '@material-ui/core';\nimport axios from 'axios';\n\nconst QuotationCompare = () => {\n    const classes = useStyles()\n    const [loading, setLoading] = useState(false)\n    const [newF, setNew] = useState(null)\n    const [old, setOld] = useState(null)\n\n    const uploadOld = (event) => {\n        setOld(event.target.files[0])\n    }\n\n    const uploadNew = (event) => {\n        setNew(event.target.files[0])\n    }\n\n    const ping = () => {\n        axios.get('https://157.245.198.24/health')\n            .then(res => {\n                console.log(res)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    const postRequest = async () => {\n        setLoading(true)\n\n        if (old == null || newF == null) {\n            alert('ensure all files have ben uploaded before proceeding')\n            setLoading(false)\n            return\n        }\n\n        const formData = new FormData();\n        formData.append(\"old\", old);\n        formData.append(\"new\", newF);\n\n        try {\n            await axios.post(\"https://157.245.198.24/compile\", formData,\n                {\n                    headers:\n                    {\n                        'Content-Disposition': \"attachment; filename=output.xlsx\",\n                        'Content-Type': 'multipart/form-data'\n                    },\n                    responseType: 'arraybuffer',\n                }\n            ).then(res => {\n                const url = window.URL.createObjectURL(new Blob([res.data]));\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download', 'output.xlsx');\n                document.body.appendChild(link);\n                link.click();\n            }).catch(err => {\n                console.log(err)\n                alert(err)\n            });\n            setLoading(false)\n        } catch (error) {\n            console.log(error)\n            setLoading(false)\n        }\n\n    }\n\n    return (\n        <div className={classes.root}>\n            <span style={{ fontSize: '30px', textAlign: 'center', fontWeight: 'bold' }}>\n                Update new Quotation file\n            </span>\n            <span style={{ fontSize: '18px', margin: '30px 0px 30px 0px', textAlign: 'left', fontWeight: \"normal\" }}>\n                Quotation File Type = Export quotation from system <br/>\n                Output file will follow the template of New Quotation. <br/>\n                It will add in details from the old file if the CPN & MPN matches. <br/>\n            </span>\n            <div className={classes.fileUploadContainer} style={{ flexDirection: 'row', width: '60%' }}>\n                <div className={classes.fileUploadWrapper} style={{ width: '30%' }}>\n                    <span className={classes.label}>Old File</span>\n                    <Input onChange={(event) => uploadOld(event)} type=\"file\" className={classes.fileUpload} />\n                </div>\n                <div className={classes.fileUploadWrapper} style={{ width: '30%' }}>\n                    <span className={classes.label}>New File</span>\n                    <Input onChange={(event) => uploadNew(event)} type=\"file\" className={classes.fileUpload} />\n                </div>\n            </div>\n            <div style={{ marginTop: '50px' }}>\n                <button onClick={() => postRequest()} className={classes.download}>\n                    Compile\n                </button>\n            </div>\n            <Backdrop\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n                open={loading}\n                style={{ position: 'absolute', zIndex: 10 }}\n            >\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </div>\n    );\n}\n\nexport default QuotationCompare;","import React, { useState } from 'react';\nimport { useStyles } from '../styles'\nimport { Backdrop, CircularProgress, Input } from '@material-ui/core';\nimport axios from 'axios';\n\nconst QuotationCompile = () => {\n    const classes = useStyles()\n    const [loading, setLoading] = useState(false)\n    const [inputFile, setInputFile] = useState(null)\n    const [priceList, setPriceList] = useState(null)\n\n    const uploadInput = (event) => {\n        setInputFile(event.target.files[0])\n    }\n\n    const uploadPricelist = (event) => {\n        setPriceList(event.target.files[0])\n    }\n\n\n    const postRequest = async () => {\n        setLoading(true)\n\n        if (inputFile == null || priceList == null) {\n            alert('ensure all files have ben uploaded before proceeding')\n            setLoading(false)\n            return\n        }\n\n        const formData = new FormData();\n        formData.append(\"file\", inputFile);\n        formData.append(\"price_list\", priceList);\n\n        try {\n            await axios.post(\"https://157.245.198.24/update\", formData,\n                {\n                    headers:\n                    {\n                        'Content-Disposition': \"attachment; filename=output.xlsx\",\n                        'Content-Type': 'multipart/form-data'\n                    },\n                    responseType: 'arraybuffer',\n                }\n            ).then(res => {\n                const url = window.URL.createObjectURL(new Blob([res.data]));\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download', 'output.xlsx');\n                document.body.appendChild(link);\n                link.click();\n            }).catch(err => {\n                console.log(err)\n                alert(err)\n            });\n            setLoading(false)\n        } catch (error) {\n            console.log(error)\n            setLoading(false)\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <span style={{ fontSize: '30px', marginBottom: '30px', textAlign: 'center', fontWeight: 'bold' }}>\n                Input Supplier Price\n            </span>\n            <div style={{ justifyContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'column' }}>\n                <h3>Your Uploaded File <span style={{ fontWeight: 'bold', color: 'red', fontSize: '20px' }}>MUST</span> follow the following format: </h3>\n                <img alt=\"Sample Format\" src={require('../assets/Format.png')} width={\"80%\"} style={{ borderRadius: \"10px\" }} />\n            </div>\n            <div className={classes.fileUploadContainer} style={{ flexDirection: 'row', width: '60%' }}>\n                <div className={classes.fileUploadWrapper} style={{ width: '30%' }}>\n                    <span className={classes.label}>Input File</span>\n                    <Input onChange={(event) => uploadInput(event)} type=\"file\" className={classes.fileUpload} />\n                </div>\n                <div className={classes.fileUploadWrapper} style={{ width: '30%' }}>\n                    <span className={classes.label}>Price List</span>\n                    <Input onChange={(event) => uploadPricelist(event)} type=\"file\" className={classes.fileUpload} />\n                </div>\n            </div>\n            <div style={{ marginTop: '50px' }}>\n                <button onClick={() => postRequest()} className={classes.download}>\n                    Compile\n                </button>\n            </div>\n            <Backdrop\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n                open={loading}\n                style={{ position: 'absolute', zIndex: 10 }}\n            >\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </div>\n    );\n}\n\nexport default QuotationCompile;","import React from 'react'\nimport Nexus from \"./views/Nexus\";\nimport Compare from './views/Compare';\nimport Compile from './views/Compile';\nimport PlexusForecast from './views/PlexusForecast';\nimport JabilForecast from './views/JabilForecast';\nimport Rescheduler from './views/Rescheduler';\n\nimport { IoMdBook, } from 'react-icons/io'\nimport BurstModeIcon from '@material-ui/icons/BurstMode';\nimport CompareIcon from '@material-ui/icons/Compare';\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\nimport EmailIcon from '@material-ui/icons/Email';\nimport AccessTimeIcon from '@material-ui/icons/AccessTimeOutlined';\nimport QuotationCompare from './views/QuotationCompare';\nimport QuotationCompile from './views/QuotationCompile';\n\nconst routes = [\n    {\n        path: '/file-automation/plexus/jit',\n        name: 'JIT Program',\n        icon: <IoMdBook size={25} style={{ color: '#fff' }} />,\n        component: Nexus\n    },\n    {\n        path: '/file-automation/plexus/forecast',\n        name: 'Forecast',\n        icon: <WbSunnyIcon size={25} style={{ color: '#fff' }}\n        />,\n        component: PlexusForecast\n    },\n    {\n        path: '/file-automation/plexus/email',\n        name: 'Email',\n        icon: <EmailIcon size={25} style={{ color: '#fff' }}\n        />,\n        component: PlexusForecast\n    },\n    {\n        path: '/file-automation/jabil/forecast',\n        name: 'Forecast',\n        icon: <WbSunnyIcon size={25} style={{ color: '#fff' }}\n        />,\n        component: JabilForecast\n    },\n    {\n        path: '/file-automation/ecommerce/online-stock-pricing',\n        name: 'Online Stock Pricing',\n        icon: <CompareIcon size={25} style={{ color: '#fff' }}\n        />,\n        component: Compare\n    },\n    {\n        path: '/file-automation/ecommerce/compile',\n        name: 'Compile',\n        icon: <BurstModeIcon size={25} style={{ color: '#fff' }}\n        />,\n        component: Compile\n    },\n    {\n        path: '/file-automation/admin/reschedule',\n        name: 'Reschedule',\n        icon: <AccessTimeIcon size={25} style={{ color: '#fff' }}\n        />,\n        component: Rescheduler\n    },\n    {\n        path: '/file-automation/admin/transfer-quotation',\n        name: 'Transfer Quotation',\n        icon: <IoMdBook size={25} style={{ color: '#fff' }}\n        />,\n        component: QuotationCompare\n    },\n    {\n        path: '/file-automation/admin/input-supplier-price',\n        name: 'Input Supplier Price',\n        icon: <IoMdBook size={25} style={{ color: '#fff' }}\n        />,\n        component: QuotationCompile\n    },\n    \n]\n\nexport default routes;","import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport { Link } from 'react-router-dom';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Collapse, Typography } from '@material-ui/core';\nimport routes from '../routes'\nimport { StarBorder } from '@material-ui/icons';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport { IoMdBook } from 'react-icons/io';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    '& .MuiDrawer-paperAnchorDockedLeft': {\n        borderRightWidth: 0\n    },\n    header: {\n        fontSize: 18,\n        color: '#fff',\n    },\n    listBody: {\n        backgroundColor: '#3f5c7c'\n    },\n    text: {\n        fontSize: 14,\n        color: '#fff',\n        marginLeft: '15px',\n    },\n    listItem: {\n        '&:hover': {\n            backgroundColor: '#324963',\n            transition: '0.3s'\n        },\n        transition: '0.3s'\n    }\n}));\n\n\nconst Sidebar = (props) => {\n\n    const classes = useStyles();\n    const [plexus, setPlexus] = useState(true)\n    const [jabil, setJabil] = useState(true)\n    const [ecomm, setEcomm] = useState(true)\n    const [admin, setAdmin] = useState(true)\n    const [quotation, setQuotation] = useState(true)\n\n    const togglePlexus = () => {\n        setPlexus(!plexus)\n    }\n\n    const toggleJabil = () => {\n        setJabil(!jabil)\n    }\n\n    const toggleEcomm = () => {\n        setEcomm(!ecomm)\n    }\n\n    const toggleAdmin = () => {\n        setAdmin(!admin)\n    }\n\n    const toggleQuotation = () => {\n        setQuotation(!quotation)\n    }\n\n    return (\n        <div>\n            <List>\n                <ListItem onClick={togglePlexus}>\n                    <ListItemText primary=\"Plexus\" className={classes.header} />\n                    {plexus ? <ExpandLess style={{ color: '#fff' }} /> : <ExpandMore style={{ color: '#fff' }} />}\n                </ListItem>\n                <Collapse in={plexus} timeout=\"auto\" unmountOnExit className={classes.listBody}>\n                    <List component=\"div\" disablePadding>\n                        <ListItem key={routes[0].name} component={Link} to={routes[0].path} className={classes.listItem}>\n                            <Typography className={classes.text}>{routes[0].name}</Typography>\n                        </ListItem>\n                        <ListItem key={routes[1].name} component={Link} to={routes[1].path} className={classes.listItem}>\n                            <Typography className={classes.text}>{routes[1].name}</Typography>\n                        </ListItem>\n                        <ListItem key={routes[2].name} component={Link} to={routes[2].path} className={classes.listItem}>\n                            <Typography className={classes.text}>{routes[2].name}</Typography>\n                        </ListItem>\n                    </List>\n                </Collapse>\n\n                <ListItem onClick={toggleJabil}>\n                    <ListItemText primary=\"Jabil\" className={classes.header} />\n                    {jabil ? <ExpandLess style={{ color: '#fff' }} /> : <ExpandMore style={{ color: '#fff' }} />}\n                </ListItem>\n                <Collapse in={jabil} timeout=\"auto\" unmountOnExit className={classes.listBody}>\n                    <List component=\"div\" disablePadding>\n                        <ListItem key={routes[3].name} component={Link} to={routes[3].path} className={classes.listItem}>\n                            <Typography className={classes.text}>{routes[3].name}</Typography>\n                        </ListItem>\n                    </List>\n                </Collapse>\n\n                <ListItem onClick={toggleEcomm}>\n                    <ListItemText primary=\"Ecommerce\" className={classes.header} />\n                    {ecomm ? <ExpandLess style={{ color: '#fff' }} /> : <ExpandMore style={{ color: '#fff' }} />}\n                </ListItem>\n                <Collapse in={ecomm} timeout=\"auto\" unmountOnExit className={classes.listBody}>\n                    <List component=\"div\" disablePadding>\n                        <ListItem key={routes[4].name} component={Link} to={routes[4].path} className={classes.listItem}>\n                            <Typography className={classes.text}>{routes[4].name}</Typography>\n                        </ListItem>\n                        <ListItem key={routes[5].name} component={Link} to={routes[5].path} className={classes.listItem}>\n                            <Typography className={classes.text}>{routes[5].name}</Typography>\n                        </ListItem>\n                    </List>\n                </Collapse>\n\n                <ListItem onClick={toggleQuotation}>\n                    <ListItemText primary=\"Quotation\" className={classes.header} />\n                    {quotation ? <ExpandLess style={{ color: '#fff' }} /> : <ExpandMore style={{ color: '#fff' }} />}\n                </ListItem>\n                <Collapse in={quotation} timeout=\"auto\" unmountOnExit className={classes.listBody}>\n                    <List component=\"div\" disablePadding>\n                        <ListItem key={routes[7].name} component={Link} to={routes[7].path} className={classes.listItem}>\n                            <Typography className={classes.text}>{routes[7].name}</Typography>\n                        </ListItem>\n                        <ListItem key={routes[8].name} component={Link} to={routes[8].path} className={classes.listItem}>\n                            <Typography className={classes.text}>{routes[8].name}</Typography>\n                        </ListItem>\n                    </List>\n                </Collapse>\n\n                <ListItem onClick={toggleAdmin}>\n                    <ListItemText primary=\"Admin\" className={classes.header} />\n                    {admin ? <ExpandLess style={{ color: '#fff' }} /> : <ExpandMore style={{ color: '#fff' }} />}\n                </ListItem>\n                <Collapse in={admin} timeout=\"auto\" unmountOnExit className={classes.listBody}>\n                    <List component=\"div\" disablePadding>\n                        <ListItem key={routes[6].name} component={Link} to={routes[6].path} className={classes.listItem}>\n                            <Typography className={classes.text}>{routes[6].name}</Typography>\n                        </ListItem>\n                    </List>\n                </Collapse>\n\n\n            </List>\n        </div>\n    );\n\n}\n\nexport default Sidebar;","import React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { useStyles } from '../styles'\nimport { Input, TextField } from '@material-ui/core';\nimport { BrandingWatermark } from '@material-ui/icons';\nimport emailjs from 'emailjs-com';\n\nconst PlexusEmail = () => {\n\n    const classes = useStyles()\n    const [info, setInfo] = useState({})\n    const [ccEmail, setCCEmail] = useState(\"\")\n    const SERVICE_NUM = 'service_l8bn2oe'\n    const USER_ID = 'user_SsmjEgiokboVh84Izujp1'\n    const TEMPLATE_ID = 'template_zy4e9yq'\n\n    const onFileChange = (e) => {\n        e.preventDefault();\n        var files = e.target.files, f = files[0];\n        if (files[0] === undefined){\n            return\n        }\n        var reader = new FileReader();\n        reader.onload = function (e) {\n            readRaw(e.target.result)\n        };\n        reader.readAsBinaryString(f)\n    }\n\n    const capitalizeString = (words) => {\n        var separateWord = words.toLowerCase().split(' ');\n        for (var i = 0; i < separateWord.length; i++) {\n            separateWord[i] = separateWord[i].charAt(0).toUpperCase() + separateWord[i].substring(1)\n        }\n        return separateWord.join(' ')\n    }\n\n    const isEmptyOrNull = (input) => {\n        return input === undefined || input === ''\n    }\n\n    const isArrayInputEmptyOrNull = (arr) => {\n        for (let input in arr) {\n            if (isEmptyOrNull(input)) {\n                return true\n            }\n        }\n        return false\n    }\n\n    const readRaw = (data) => {\n        let renderedData = XLSX.read(data, { type: 'binary' });\n        const dataParse = XLSX.utils.sheet_to_json(renderedData.Sheets[renderedData.SheetNames[0]], { header: 1 });\n        let dict = {}\n        let flag = false\n        for (let i = 1; i < dataParse.length; i++) {\n            if (dataParse[i].length <= 0) {\n                flag = true\n                break\n            }\n            let cpn = dataParse[i][0].toString()\n            let stockCode = dataParse[i][1].toString()\n            let brand = dataParse[i][3].toString()\n            let name = dataParse[i][4].toString()\n            let email = dataParse[i][5].toString()\n\n            if (isArrayInputEmptyOrNull([cpn, stockCode, brand, email, name])) {\n                flag = true\n                break\n            }\n\n            if (!(email in dict))\n                dict[email] = []\n\n            dict[email].push({\n                cpn: cpn.trim(),\n                stockCode: stockCode.trim(),\n                brand: brand.trim(),\n                name: capitalizeString(name.trim())\n            })\n        }\n        if (flag) {\n            alert('Ensure input file is in correct format')\n            console.log('Input file validation failed')\n        } else {\n            console.log(`Total Emails: ${Object.keys(dict).length}`)\n            setInfo(dict)\n        }\n    }\n\n    const sendEmail = async () => {\n        if (Object.keys(info).length === 0) {\n            alert('Ensure Valid file is uploaded')\n            return\n        }\n        for (const [key, v] of Object.entries(info)) {\n            if (key === undefined) {\n                break\n            }\n            console.log(key)\n            let name = v[0].name\n            let body = `<table style=\"line-height:20px;width:100%;text-align:left\"><tr><th>CPN</th><th>MFR</th><th>MPN</th></tr>`\n            let cpnList = ''\n            for (let i = 0; i < v.length; i++) {\n                body += `<tr><td><strong>${v[i].cpn}</strong></td><td><strong>${v[i].brand}</strong></td><td><strong>${v[i].stockCode}</strong></td></tr>`\n                cpnList += `${v[i].cpn}`\n                if (i !== v.length - 1) {\n                    cpnList += ', '\n                }\n            }\n            body += '</table>'\n            var templateParams = {\n                to_email: 'darryleong95@gmail.com',\n                // to_email: v.email,\n                cpn_list: cpnList,\n                to_name: name,\n                table: body\n            };\n\n            console.log(templateParams)\n            await emailjs.send(SERVICE_NUM, TEMPLATE_ID, templateParams, USER_ID)\n                .then(function (response) {\n                    console.log('SUCCESS!', response.status, response.text);\n                }, function (error) {\n                    console.log('FAILED...', error);\n                });\n            break\n        }\n        alert('Emails sent.')\n    }\n\n\n    const handleCC = (e) => {\n        setCCEmail(e.target.value)\n    }\n\n    return (\n        <div className={classes.root}>\n            <span style={{ fontSize: '30px', marginBottom: '30px', textAlign: 'center', fontWeight: 'bold' }}>\n                Plexus Email\n            </span>\n            <div className={classes.fileUploadContainer} style={{ flexDirection: 'row', width: '60%' }}>\n                <div className={classes.fileUploadWrapper}>\n                    <span className={classes.label}>Buyer Booking Details</span>\n                    <div className={classes.inputContainer}>\n                        <Input onChange={(event) => onFileChange(event, 1)} type=\"file\" className={classes.fileUpload} variant={'filled'} />\n                        <TextField className={classes.fileUpload} label=\"cc-email\" value={ccEmail} onChange={handleCC} rows={1} rowsMax={1} variant={'filled'} />\n                    </div>\n                </div>\n            </div>\n            <div style={{ marginTop: '50px' }}>\n                <button onClick={() => sendEmail()} className={classes.download}>\n                    Send\n                </button>\n            </div>\n        </div>\n    );\n}\n\n\nexport default PlexusEmail;","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Sidebar from './components/Sidebar.js';\nimport Drawer from '@material-ui/core/Drawer';\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Route, Switch } from 'react-router-dom';\nimport Nexus from './views/Nexus';\nimport Compare from './views/Compare.js';\nimport Compile from './views/Compile.js';\nimport PlexusForecast from './views/PlexusForecast.js';\nimport JabilForecast from './views/JabilForecast.js';\nimport PlexusEmail from './views/PlexusEmail.js';\nimport Rescheduler from './views/Rescheduler.js';\nimport QuotationCompare from './views/QuotationCompare.js';\nimport QuotationCompile from './views/QuotationCompile.js';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    // fontFamily:'AirbnbCereal-Medium'\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: '#2e4574',\n    border: 'none'\n  },\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <nav className={classes.drawer} aria-label=\"navigation-tabs\">\n        <Drawer\n          classes={{\n            paper: classes.drawerPaper\n          }}\n          variant=\"permanent\"\n          open\n        >\n          <Sidebar />\n        </Drawer>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Switch>\n          {/* <Route exact path=\"/file-automation\" render={() => <div>WISELINK</div>} /> */}\n          <Route path=\"/file-automation/plexus/jit\" render={() => <Nexus />} />\n          <Route path=\"/file-automation/plexus/forecast\" render={() => <PlexusForecast />} />\n          <Route path=\"/file-automation/plexus/email\" render={() => <PlexusEmail />} />\n          <Route path=\"/file-automation/jabil/forecast\" render={() => <JabilForecast />} />\n          <Route path=\"/file-automation/ecommerce/compare\" render={() => <Compare />} />\n          <Route path=\"/file-automation/ecommerce/compile\" render={() => <Compile />} />\n          <Route path=\"/file-automation/admin/reschedule\" render={() => <Rescheduler />} />\n          <Route path=\"/file-automation/admin/transfer-quotation\" render={() => <QuotationCompare />} />\n          <Route path=\"/file-automation/admin/input-supplier-price\" render={() => <QuotationCompile />} />\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter >,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Format.8dacd377.png\";"],"sourceRoot":""}